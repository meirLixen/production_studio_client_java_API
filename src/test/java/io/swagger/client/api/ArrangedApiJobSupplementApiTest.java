/*
 * production-studio API
 * This is a REST API application made with Express.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ArrangedApiJobSupplementApi
 */
@Ignore
public class ArrangedApiJobSupplementApiTest {

    private final ArrangedApiJobSupplementApi api = new ArrangedApiJobSupplementApi();

    /**
     * job-offers-confirm-offer
     *
     * *   (jobs table) find job by id. *   (jobcrews table) find job-crew by id and set \&quot;userConfirmAccept\&quot; to \&quot;true\&quot; and \&quot;confirmedAt\&quot; to current date. *   (user table) find user and push job id to \&quot;dismissedJobOffers\&quot; array. *   (jobpriceoffers table) find job price offer and set \&quot;hideOffer\&quot; to \&quot;true\&quot;. *   create notification.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newApiJobJobOffersConfirmOfferPostTest() throws ApiException {
        Object body = null;
        api.newApiJobJobOffersConfirmOfferPost(body);

        // TODO: test validations
    }
    /**
     * job-offers-request-cancelation
     *
     * *   (jobcrews table) find job-crew by id and set \&quot;userRequestRemoval\&quot; to true. *   create notification.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newApiJobJobOffersRequestCancelationPostTest() throws ApiException {
        Object body = null;
        api.newApiJobJobOffersRequestCancelationPost(body);

        // TODO: test validations
    }
    /**
     * load-manage-posts
     *
     * get my jobs where crewFull &#x3D; false and \&quot;dates.to\&quot; until the current date
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newApiJobLoadManagePostsGetTest() throws ApiException {
        Boolean showArchive = null;
        Integer sort = null;
        api.newApiJobLoadManagePostsGet(showArchive, sort);

        // TODO: test validations
    }
    /**
     * load-manage-posts-single
     *
     * get job by id and set hasSeen &#x3D; true
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newApiJobLoadManagePostsSingleGetTest() throws ApiException {
        String jobId = null;
        api.newApiJobLoadManagePostsSingleGet(jobId);

        // TODO: test validations
    }
    /**
     * load-my-crew-posts
     *
     * get my \&quot;jobcrews\&quot; where userConfirmAccept &#x3D; true
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newApiJobLoadMyCrewPostsGetTest() throws ApiException {
        api.newApiJobLoadMyCrewPostsGet();

        // TODO: test validations
    }
    /**
     * manage-crew-accept-user-removal-request
     *
     * *   (jobcrews table) find job-crew by id. *   (jobpriceoffers table) delete his job-price-offer. *   (job table) find his job by id and remove job-crew from crew array. *   (user table) find user and remove job from jobOffers *   array. and push job to dismissedJobOffers array. *   (jobcrews table) delete job-crew. *   send notification.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newApiJobManageCrewAcceptUserRemovalRequestPostTest() throws ApiException {
        Object body = null;
        api.newApiJobManageCrewAcceptUserRemovalRequestPost(body);

        // TODO: test validations
    }
    /**
     * manage-crew-request-user-removal
     *
     * (jobcrews table) find job-crew by id, and set ownerRequestRemoval to true, and if \&quot;action\&quot; key set to \&quot;onlyRemove\&quot; set \&quot;openJobAfterRemove\&quot; to \&quot;false\&quot; else set it to \&quot;true\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newApiJobManageCrewRequestUserRemovalPostTest() throws ApiException {
        Object body = null;
        api.newApiJobManageCrewRequestUserRemovalPost(body);

        // TODO: test validations
    }
}
