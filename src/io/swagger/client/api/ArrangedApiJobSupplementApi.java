/*
 * production-studio API
 * This is a REST API application made with Express.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ArrangedApiJobSupplementApi {
    private ApiClient __apiClient;

    public ArrangedApiJobSupplementApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ArrangedApiJobSupplementApi(ApiClient apiClient) {
        this.__apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return __apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.__apiClient = apiClient;
    }

    /**
     * Build call for newApiJobJobOffersConfirmOfferPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call newApiJobJobOffersConfirmOfferPostCall(Object body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = body;
        
        // create path and map variables
        String __localVarPath = "/new-api/job/job-offers-confirm-offer";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            "application/json"
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "POST", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call newApiJobJobOffersConfirmOfferPostValidateBeforeCall(Object body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = newApiJobJobOffersConfirmOfferPostCall(body, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * job-offers-confirm-offer
     * *   (jobs table) find job by id. *   (jobcrews table) find job-crew by id and set \&quot;userConfirmAccept\&quot; to \&quot;true\&quot; and \&quot;confirmedAt\&quot; to current date. *   (user table) find user and push job id to \&quot;dismissedJobOffers\&quot; array. *   (jobpriceoffers table) find job price offer and set \&quot;hideOffer\&quot; to \&quot;true\&quot;. *   create notification.
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void newApiJobJobOffersConfirmOfferPost(Object body) throws ApiException {
        newApiJobJobOffersConfirmOfferPostWithHttpInfo(body);
    }

    /**
     * job-offers-confirm-offer
     * *   (jobs table) find job by id. *   (jobcrews table) find job-crew by id and set \&quot;userConfirmAccept\&quot; to \&quot;true\&quot; and \&quot;confirmedAt\&quot; to current date. *   (user table) find user and push job id to \&quot;dismissedJobOffers\&quot; array. *   (jobpriceoffers table) find job price offer and set \&quot;hideOffer\&quot; to \&quot;true\&quot;. *   create notification.
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> newApiJobJobOffersConfirmOfferPostWithHttpInfo(Object body) throws ApiException {
        com.squareup.okhttp.Call __call = newApiJobJobOffersConfirmOfferPostValidateBeforeCall(body, null, null);
        return __apiClient.execute(__call);
    }

    /**
     * job-offers-confirm-offer (asynchronously)
     * *   (jobs table) find job by id. *   (jobcrews table) find job-crew by id and set \&quot;userConfirmAccept\&quot; to \&quot;true\&quot; and \&quot;confirmedAt\&quot; to current date. *   (user table) find user and push job id to \&quot;dismissedJobOffers\&quot; array. *   (jobpriceoffers table) find job price offer and set \&quot;hideOffer\&quot; to \&quot;true\&quot;. *   create notification.
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call newApiJobJobOffersConfirmOfferPostAsync(Object body, final ApiCallback<Void> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = newApiJobJobOffersConfirmOfferPostValidateBeforeCall(body, progressListener, progressRequestListener);
        __apiClient.executeAsync(__call, __callback);
        return __call;
    }
    /**
     * Build call for newApiJobJobOffersRequestCancelationPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call newApiJobJobOffersRequestCancelationPostCall(Object body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = body;
        
        // create path and map variables
        String __localVarPath = "/new-api/job/job-offers-request-cancelation";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            "application/json"
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "POST", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call newApiJobJobOffersRequestCancelationPostValidateBeforeCall(Object body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = newApiJobJobOffersRequestCancelationPostCall(body, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * job-offers-request-cancelation
     * *   (jobcrews table) find job-crew by id and set \&quot;userRequestRemoval\&quot; to true. *   create notification.
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void newApiJobJobOffersRequestCancelationPost(Object body) throws ApiException {
        newApiJobJobOffersRequestCancelationPostWithHttpInfo(body);
    }

    /**
     * job-offers-request-cancelation
     * *   (jobcrews table) find job-crew by id and set \&quot;userRequestRemoval\&quot; to true. *   create notification.
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> newApiJobJobOffersRequestCancelationPostWithHttpInfo(Object body) throws ApiException {
        com.squareup.okhttp.Call __call = newApiJobJobOffersRequestCancelationPostValidateBeforeCall(body, null, null);
        return __apiClient.execute(__call);
    }

    /**
     * job-offers-request-cancelation (asynchronously)
     * *   (jobcrews table) find job-crew by id and set \&quot;userRequestRemoval\&quot; to true. *   create notification.
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call newApiJobJobOffersRequestCancelationPostAsync(Object body, final ApiCallback<Void> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = newApiJobJobOffersRequestCancelationPostValidateBeforeCall(body, progressListener, progressRequestListener);
        __apiClient.executeAsync(__call, __callback);
        return __call;
    }
    /**
     * Build call for newApiJobLoadManagePostsGet
     * @param showArchive  (optional)
     * @param sort  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call newApiJobLoadManagePostsGetCall(Boolean showArchive, Integer sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/new-api/job/load-manage-posts";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();
        if (showArchive != null)
        __localVarQueryParams.addAll(__apiClient.parameterToPair("showArchive", showArchive));
        if (sort != null)
        __localVarQueryParams.addAll(__apiClient.parameterToPair("sort", sort));

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call newApiJobLoadManagePostsGetValidateBeforeCall(Boolean showArchive, Integer sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = newApiJobLoadManagePostsGetCall(showArchive, sort, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * load-manage-posts
     * get my jobs where crewFull &#x3D; false and \&quot;dates.to\&quot; until the current date
     * @param showArchive  (optional)
     * @param sort  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void newApiJobLoadManagePostsGet(Boolean showArchive, Integer sort) throws ApiException {
        newApiJobLoadManagePostsGetWithHttpInfo(showArchive, sort);
    }

    /**
     * load-manage-posts
     * get my jobs where crewFull &#x3D; false and \&quot;dates.to\&quot; until the current date
     * @param showArchive  (optional)
     * @param sort  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> newApiJobLoadManagePostsGetWithHttpInfo(Boolean showArchive, Integer sort) throws ApiException {
        com.squareup.okhttp.Call __call = newApiJobLoadManagePostsGetValidateBeforeCall(showArchive, sort, null, null);
        return __apiClient.execute(__call);
    }

    /**
     * load-manage-posts (asynchronously)
     * get my jobs where crewFull &#x3D; false and \&quot;dates.to\&quot; until the current date
     * @param showArchive  (optional)
     * @param sort  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call newApiJobLoadManagePostsGetAsync(Boolean showArchive, Integer sort, final ApiCallback<Void> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = newApiJobLoadManagePostsGetValidateBeforeCall(showArchive, sort, progressListener, progressRequestListener);
        __apiClient.executeAsync(__call, __callback);
        return __call;
    }
    /**
     * Build call for newApiJobLoadManagePostsSingleGet
     * @param jobId  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call newApiJobLoadManagePostsSingleGetCall(String jobId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/new-api/job/load-manage-posts-single";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();
        if (jobId != null)
        __localVarQueryParams.addAll(__apiClient.parameterToPair("jobId", jobId));

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call newApiJobLoadManagePostsSingleGetValidateBeforeCall(String jobId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = newApiJobLoadManagePostsSingleGetCall(jobId, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * load-manage-posts-single
     * get job by id and set hasSeen &#x3D; true
     * @param jobId  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void newApiJobLoadManagePostsSingleGet(String jobId) throws ApiException {
        newApiJobLoadManagePostsSingleGetWithHttpInfo(jobId);
    }

    /**
     * load-manage-posts-single
     * get job by id and set hasSeen &#x3D; true
     * @param jobId  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> newApiJobLoadManagePostsSingleGetWithHttpInfo(String jobId) throws ApiException {
        com.squareup.okhttp.Call __call = newApiJobLoadManagePostsSingleGetValidateBeforeCall(jobId, null, null);
        return __apiClient.execute(__call);
    }

    /**
     * load-manage-posts-single (asynchronously)
     * get job by id and set hasSeen &#x3D; true
     * @param jobId  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call newApiJobLoadManagePostsSingleGetAsync(String jobId, final ApiCallback<Void> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = newApiJobLoadManagePostsSingleGetValidateBeforeCall(jobId, progressListener, progressRequestListener);
        __apiClient.executeAsync(__call, __callback);
        return __call;
    }
    /**
     * Build call for newApiJobLoadMyCrewPostsGet
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call newApiJobLoadMyCrewPostsGetCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/new-api/job/load-my-crew-posts";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call newApiJobLoadMyCrewPostsGetValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = newApiJobLoadMyCrewPostsGetCall(progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * load-my-crew-posts
     * get my \&quot;jobcrews\&quot; where userConfirmAccept &#x3D; true
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void newApiJobLoadMyCrewPostsGet() throws ApiException {
        newApiJobLoadMyCrewPostsGetWithHttpInfo();
    }

    /**
     * load-my-crew-posts
     * get my \&quot;jobcrews\&quot; where userConfirmAccept &#x3D; true
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> newApiJobLoadMyCrewPostsGetWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call __call = newApiJobLoadMyCrewPostsGetValidateBeforeCall(null, null);
        return __apiClient.execute(__call);
    }

    /**
     * load-my-crew-posts (asynchronously)
     * get my \&quot;jobcrews\&quot; where userConfirmAccept &#x3D; true
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call newApiJobLoadMyCrewPostsGetAsync(final ApiCallback<Void> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = newApiJobLoadMyCrewPostsGetValidateBeforeCall(progressListener, progressRequestListener);
        __apiClient.executeAsync(__call, __callback);
        return __call;
    }
    /**
     * Build call for newApiJobManageCrewAcceptUserRemovalRequestPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call newApiJobManageCrewAcceptUserRemovalRequestPostCall(Object body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = body;
        
        // create path and map variables
        String __localVarPath = "/new-api/job/manage-crew-accept-user-removal-request";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            "application/json"
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "POST", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call newApiJobManageCrewAcceptUserRemovalRequestPostValidateBeforeCall(Object body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = newApiJobManageCrewAcceptUserRemovalRequestPostCall(body, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * manage-crew-accept-user-removal-request
     * *   (jobcrews table) find job-crew by id. *   (jobpriceoffers table) delete his job-price-offer. *   (job table) find his job by id and remove job-crew from crew array. *   (user table) find user and remove job from jobOffers *   array. and push job to dismissedJobOffers array. *   (jobcrews table) delete job-crew. *   send notification.
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void newApiJobManageCrewAcceptUserRemovalRequestPost(Object body) throws ApiException {
        newApiJobManageCrewAcceptUserRemovalRequestPostWithHttpInfo(body);
    }

    /**
     * manage-crew-accept-user-removal-request
     * *   (jobcrews table) find job-crew by id. *   (jobpriceoffers table) delete his job-price-offer. *   (job table) find his job by id and remove job-crew from crew array. *   (user table) find user and remove job from jobOffers *   array. and push job to dismissedJobOffers array. *   (jobcrews table) delete job-crew. *   send notification.
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> newApiJobManageCrewAcceptUserRemovalRequestPostWithHttpInfo(Object body) throws ApiException {
        com.squareup.okhttp.Call __call = newApiJobManageCrewAcceptUserRemovalRequestPostValidateBeforeCall(body, null, null);
        return __apiClient.execute(__call);
    }

    /**
     * manage-crew-accept-user-removal-request (asynchronously)
     * *   (jobcrews table) find job-crew by id. *   (jobpriceoffers table) delete his job-price-offer. *   (job table) find his job by id and remove job-crew from crew array. *   (user table) find user and remove job from jobOffers *   array. and push job to dismissedJobOffers array. *   (jobcrews table) delete job-crew. *   send notification.
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call newApiJobManageCrewAcceptUserRemovalRequestPostAsync(Object body, final ApiCallback<Void> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = newApiJobManageCrewAcceptUserRemovalRequestPostValidateBeforeCall(body, progressListener, progressRequestListener);
        __apiClient.executeAsync(__call, __callback);
        return __call;
    }
    /**
     * Build call for newApiJobManageCrewRequestUserRemovalPost
     * @param body  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call newApiJobManageCrewRequestUserRemovalPostCall(Object body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = body;
        
        // create path and map variables
        String __localVarPath = "/new-api/job/manage-crew-request-user-removal";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            "application/json"
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "POST", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call newApiJobManageCrewRequestUserRemovalPostValidateBeforeCall(Object body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = newApiJobManageCrewRequestUserRemovalPostCall(body, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * manage-crew-request-user-removal
     * (jobcrews table) find job-crew by id, and set ownerRequestRemoval to true, and if \&quot;action\&quot; key set to \&quot;onlyRemove\&quot; set \&quot;openJobAfterRemove\&quot; to \&quot;false\&quot; else set it to \&quot;true\&quot;
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void newApiJobManageCrewRequestUserRemovalPost(Object body) throws ApiException {
        newApiJobManageCrewRequestUserRemovalPostWithHttpInfo(body);
    }

    /**
     * manage-crew-request-user-removal
     * (jobcrews table) find job-crew by id, and set ownerRequestRemoval to true, and if \&quot;action\&quot; key set to \&quot;onlyRemove\&quot; set \&quot;openJobAfterRemove\&quot; to \&quot;false\&quot; else set it to \&quot;true\&quot;
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> newApiJobManageCrewRequestUserRemovalPostWithHttpInfo(Object body) throws ApiException {
        com.squareup.okhttp.Call __call = newApiJobManageCrewRequestUserRemovalPostValidateBeforeCall(body, null, null);
        return __apiClient.execute(__call);
    }

    /**
     * manage-crew-request-user-removal (asynchronously)
     * (jobcrews table) find job-crew by id, and set ownerRequestRemoval to true, and if \&quot;action\&quot; key set to \&quot;onlyRemove\&quot; set \&quot;openJobAfterRemove\&quot; to \&quot;false\&quot; else set it to \&quot;true\&quot;
     * @param body  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call newApiJobManageCrewRequestUserRemovalPostAsync(Object body, final ApiCallback<Void> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = newApiJobManageCrewRequestUserRemovalPostValidateBeforeCall(body, progressListener, progressRequestListener);
        __apiClient.executeAsync(__call, __callback);
        return __call;
    }
}
