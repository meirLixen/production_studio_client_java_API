/*
 * production-studio API
 * This is a REST API application made with Express.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StaticApi {
    private ApiClient __apiClient;

    public StaticApi() {
        this(Configuration.getDefaultApiClient());
    }

    public StaticApi(ApiClient apiClient) {
        this.__apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return __apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.__apiClient = apiClient;
    }

    /**
     * Build call for staticBodyTypesGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticBodyTypesGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/body-types";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticBodyTypesGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticBodyTypesGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of body types from database.
     * Retrieve a list of body types from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticBodyTypesGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticBodyTypesGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of body types from database.
     * Retrieve a list of body types from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticBodyTypesGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticBodyTypesGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of body types from database. (asynchronously)
     * Retrieve a list of body types from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticBodyTypesGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticBodyTypesGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticCountriesGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticCountriesGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/countries";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticCountriesGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticCountriesGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of countries from database.
     * Retrieve a list of countries from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticCountriesGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticCountriesGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of countries from database.
     * Retrieve a list of countries from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticCountriesGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticCountriesGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of countries from database. (asynchronously)
     * Retrieve a list of countries from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticCountriesGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticCountriesGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticCurrenciesGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticCurrenciesGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/currencies";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticCurrenciesGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticCurrenciesGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of currencies from database.
     * Retrieve a list of currencies from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticCurrenciesGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticCurrenciesGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of currencies from database.
     * Retrieve a list of currencies from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticCurrenciesGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticCurrenciesGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of currencies from database. (asynchronously)
     * Retrieve a list of currencies from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticCurrenciesGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticCurrenciesGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticCurrencyCoinsGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticCurrencyCoinsGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/currency-coins";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticCurrencyCoinsGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticCurrencyCoinsGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of currency-coins from database.
     * Retrieve a list of currency-coins from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticCurrencyCoinsGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticCurrencyCoinsGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of currency-coins from database.
     * Retrieve a list of currency-coins from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticCurrencyCoinsGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticCurrencyCoinsGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of currency-coins from database. (asynchronously)
     * Retrieve a list of currency-coins from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticCurrencyCoinsGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticCurrencyCoinsGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticEthnicitiesGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticEthnicitiesGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/ethnicities";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticEthnicitiesGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticEthnicitiesGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of ethnicities from database.
     * Retrieve a list of ethnicities from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticEthnicitiesGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticEthnicitiesGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of ethnicities from database.
     * Retrieve a list of ethnicities from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticEthnicitiesGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticEthnicitiesGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of ethnicities from database. (asynchronously)
     * Retrieve a list of ethnicities from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticEthnicitiesGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticEthnicitiesGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticEyeColorsGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticEyeColorsGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/eye-colors";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticEyeColorsGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticEyeColorsGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of eye_colors from database.
     * Retrieve a list of eye_colors from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticEyeColorsGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticEyeColorsGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of eye_colors from database.
     * Retrieve a list of eye_colors from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticEyeColorsGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticEyeColorsGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of eye_colors from database. (asynchronously)
     * Retrieve a list of eye_colors from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticEyeColorsGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticEyeColorsGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticHairColorsGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticHairColorsGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/hair-colors";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticHairColorsGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticHairColorsGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of hair colors from database.
     * Retrieve a list of hair colors from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticHairColorsGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticHairColorsGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of hair colors from database.
     * Retrieve a list of hair colors from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticHairColorsGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticHairColorsGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of hair colors from database. (asynchronously)
     * Retrieve a list of hair colors from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticHairColorsGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticHairColorsGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticLanguagesGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticLanguagesGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/languages";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticLanguagesGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticLanguagesGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of languages from database.
     * Retrieve a list of languages from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticLanguagesGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticLanguagesGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of languages from database.
     * Retrieve a list of languages from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticLanguagesGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticLanguagesGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of languages from database. (asynchronously)
     * Retrieve a list of languages from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticLanguagesGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticLanguagesGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticLocationsCategoriesEnGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticLocationsCategoriesEnGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/locations-categories-en";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticLocationsCategoriesEnGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticLocationsCategoriesEnGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of locations categories en from database.
     * Retrieve a list of locations categories en from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticLocationsCategoriesEnGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticLocationsCategoriesEnGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of locations categories en from database.
     * Retrieve a list of locations categories en from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticLocationsCategoriesEnGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticLocationsCategoriesEnGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of locations categories en from database. (asynchronously)
     * Retrieve a list of locations categories en from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticLocationsCategoriesEnGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticLocationsCategoriesEnGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
    /**
     * Build call for staticSkillsGet
     * @param accept  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call staticSkillsGetCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object __localVarPostBody = null;
        
        // create path and map variables
        String __localVarPath = "/static/skills";

        List<Pair> __localVarQueryParams = new ArrayList<Pair>();
        List<Pair> __localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> __localVarHeaderParams = new HashMap<String, String>();
        if (accept != null)
        __localVarHeaderParams.put("Accept", __apiClient.parameterToString(accept));

        Map<String, Object> __localVarFormParams = new HashMap<String, Object>();

        final String[] __localVarAccepts = {
            "application/json"
        };
        final String __localVarAccept = __apiClient.selectHeaderAccept(__localVarAccepts);
        if (__localVarAccept != null) __localVarHeaderParams.put("Accept", __localVarAccept);

        final String[] __localVarContentTypes = {
            
        };
        final String __localVarContentType = __apiClient.selectHeaderContentType(__localVarContentTypes);
        __localVarHeaderParams.put("Content-Type", __localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] __localVarAuthNames = new String[] {  };
        return __apiClient.buildCall(__localVarPath, "GET", __localVarQueryParams, __localVarCollectionQueryParams, __localVarPostBody, __localVarHeaderParams, __localVarFormParams, __localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call staticSkillsGetValidateBeforeCall(String accept, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call __call = staticSkillsGetCall(accept, progressListener, progressRequestListener);
        return __call;

        
        
        
        
    }

    /**
     * Retrieve a list of skills from database.
     * Retrieve a list of skills from database.
     * @param accept  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object staticSkillsGet(String accept) throws ApiException {
        ApiResponse<Object> __resp = staticSkillsGetWithHttpInfo(accept);
        return __resp.getData();
    }

    /**
     * Retrieve a list of skills from database.
     * Retrieve a list of skills from database.
     * @param accept  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> staticSkillsGetWithHttpInfo(String accept) throws ApiException {
        com.squareup.okhttp.Call __call = staticSkillsGetValidateBeforeCall(accept, null, null);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        return __apiClient.execute(__call, __localVarReturnType);
    }

    /**
     * Retrieve a list of skills from database. (asynchronously)
     * Retrieve a list of skills from database.
     * @param accept  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call staticSkillsGetAsync(String accept, final ApiCallback<Object> __callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call __call = staticSkillsGetValidateBeforeCall(accept, progressListener, progressRequestListener);
        Type __localVarReturnType = new TypeToken<Object>(){}.getType();
        __apiClient.executeAsync(__call, __localVarReturnType, __callback);
        return __call;
    }
}
